@page "/settings"

@using Monitor.Workers
@using Monitor.Components
@using Monitor.Services
@using System.Globalization
@using Monitor.Extensions

@inject SerialMessageService SerialMessageService

@inject CameraCaptureApp CameraCaptureApp
@inject GpioApp GpioApp
@inject LowBatteryApp LowBatteryApp
@inject MpptApp MpptApp
@inject PowerNightApp PowerNightApp
@inject WatchdogApp WatchdogApp
@inject AprsIsApp AprsIsApp

@implements IDisposable

<PageTitle>Paramètres</PageTitle>

<PageHeader Title="Paramètres" Subtitle="@MonitorService.State.LastMessagesReceived.LastOrDefault()?.ReceivedAt.ToFrench().ToString(CultureInfo.CurrentCulture)" />

<GridRow Gutter="(16, 16)" Justify="center">
    <GridCol Md="24" Lg="12">
        <Card Title="Nuit">
            <Body>
            <Descriptions Bordered="true" Column="1">
                <DescriptionsItem Title="Activé">
                    <Switch @bind-Checked="PowerNightApp.Enabled.Value"></Switch>
                </DescriptionsItem>
                <DescriptionsItem Title="Utilise l'heure de lever du soleil">
                    <Switch @bind-Checked="PowerNightApp.UseSun.Value"></Switch>
                </DescriptionsItem>
                <DescriptionsItem Title="Réveil la nuit">
                    <Switch @bind-Checked="PowerNightApp.TurnOn.Value"></Switch>
                </DescriptionsItem>
                <DescriptionsItem Title="Tension limite du réveil">
                    <AntDesign.InputNumber @bind-Value="PowerNightApp.LimitVoltage.Value" Min="11000" Max="12000"></AntDesign.InputNumber>
                </DescriptionsItem>
                <DescriptionsItem Title="Durée éteint">
                    <TimeSpanPicker @bind-Model="PowerNightApp.TimeOff.Value" />
                </DescriptionsItem>
            </Descriptions>
            </Body>
        </Card>
    </GridCol>
    <GridCol Md="24" Lg="12">
        <Card Title="Batterie faible">
            <Body>
            <Descriptions Bordered="true" Column="1">
                <DescriptionsItem Title="Activé">
                    <Switch @bind-Checked="LowBatteryApp.Enabled.Value"></Switch>
                </DescriptionsItem>
                <DescriptionsItem Title="Tension limite">
                    <AntDesign.InputNumber @bind-Value="LowBatteryApp.Voltage.Value" Min="11000" Max="12000"></AntDesign.InputNumber>
                </DescriptionsItem>
                <DescriptionsItem Title="Durée éteint">
                    <TimeSpanPicker @bind-Model="LowBatteryApp.TimeOff.Value" />
                </DescriptionsItem>
            </Descriptions>
            </Body>
        </Card>
    </GridCol>
    <GridCol Md="24" Lg="12">
        <Card Title="MPPT">
            <Body>
            <Descriptions Bordered="true" Column="1">
                <DescriptionsItem Title="Tension basse">
                    <AntDesign.InputNumber @bind-Value="EntitiesManagerService.Entities.MpptPowerOffVoltage.Value" Min="11000" Max="12000"></AntDesign.InputNumber>
                </DescriptionsItem>
                <DescriptionsItem Title="Tension haute">
                    <AntDesign.InputNumber @bind-Value="EntitiesManagerService.Entities.MpptPowerOnVoltage.Value" Min="12000" Max="13000"></AntDesign.InputNumber>
                </DescriptionsItem>
            </Descriptions>
            </Body>
        </Card>
    </GridCol>
    <GridCol Md="24" Lg="12">
        <Card Title="Watchdog">
            <Body>
            <Descriptions Bordered="true" Column="1">
                <DescriptionsItem Title="Activé">
                    <Switch @bind-Checked="WatchdogApp.Enabled.Value"></Switch>
                </DescriptionsItem>
                <DescriptionsItem Title="Temps éteint">
                    <TimeSpanPicker @bind-Model="EntitiesManagerService.Entities.WatchdogPowerOffTime.Value" />
                </DescriptionsItem>
                <DescriptionsItem Title="Durée après alerte">
                    <TimeSpanPicker @bind-Model="MpptApp.DurationAfterAlert.Value" />
                </DescriptionsItem>
            </Descriptions>
            </Body>
        </Card>
    </GridCol>
    <GridCol Md="24" Lg="12">
        <Card Title="Caméras">
            <Body>
            <Descriptions Bordered="true" Column="1">
                <DescriptionsItem Title="Activé">
                    <Switch @bind-Checked="CameraCaptureApp.Enabled.Value"></Switch>
                </DescriptionsItem>
                <DescriptionsItem Title="Interval">
                    <TimeSpanPicker @bind-Model="CameraCaptureApp.Interval.Value" />
                </DescriptionsItem>
            </Descriptions>
            </Body>
        </Card>
    </GridCol>
    <GridCol Md="24" Lg="12">
        <Card Title="GPIO">
            <Body>
            <Descriptions Bordered="true" Column="1">
                <DescriptionsItem Title="Wifi">
                    <Switch @bind-Checked="EntitiesManagerService.Entities.GpioWifi.Value"></Switch>
                </DescriptionsItem>
                <DescriptionsItem Title="NPR">
                    <Switch @bind-Checked="EntitiesManagerService.Entities.GpioNpr.Value"></Switch>
                </DescriptionsItem>
                <DescriptionsItem Title="Wifi au démarrage">
                    <Switch @bind-Checked="GpioApp.StartWifiTurnOn.Value"></Switch>
                </DescriptionsItem>
                <DescriptionsItem Title="NPR au démarrage">
                    <Switch @bind-Checked="GpioApp.StartNprTurnOn.Value"></Switch>
                </DescriptionsItem>
            </Descriptions>
            </Body>
        </Card>
    </GridCol>
    <GridCol Md="24" Lg="12">
        <Card Title="LoRa TX">
            <Body>
            <Switch @bind-Checked="AprsIsApp.Enabled.Value"></Switch>
            <Input @bind-Value="LoRaTxPayload" Placeholder="Payload" />
            <Button Type="@ButtonType.Primary" HtmlType="button" OnClick="SendLoRa">
                Envoyer
            </Button>
            </Body>
        </Card>
    </GridCol>
    <GridCol Md="24" Lg="12">
        <Card Title="Commande série TX">
            <Body>
            <Input @bind-Value="SerialTxPayload" Placeholder="Payload" />
            <Button Type="@ButtonType.Primary" HtmlType="button" OnClick="SendSerial">
                Envoyer
            </Button>
            </Body>
        </Card>
    </GridCol>
</GridRow>

@code {
    protected override async Task OnInitializedAsync()
    {
        _timer = new Timer(async _ => await UpdateData(), null, TimeSpan.Zero, TimeSpan.FromSeconds(5));
        await base.OnInitializedAsync();
    }

    private async Task UpdateData()
    {
        await InvokeAsync(() =>
        {
            try
            {
                StateHasChanged();
            }
            catch (Exception)
            {
    // to prevent app crash when bug appear
            }
        });
    }
    
    private void SendLoRa()
    {
        if (!string.IsNullOrWhiteSpace(LoRaTxPayload))
        {
            SerialMessageService.SendLora(LoRaTxPayload);
            LoRaTxPayload = null;
        }
    }
    
    private void SendSerial()
    {
        if (!string.IsNullOrWhiteSpace(SerialTxPayload))
        {
            SerialMessageService.SendCommand(SerialTxPayload);
            SerialTxPayload = null;
        }
    }

    public void Dispose()
    {
        _timer?.Dispose();
    }

    private Timer? _timer;
    private string? LoRaTxPayload { get; set; }
    private string? SerialTxPayload { get; set; }
}